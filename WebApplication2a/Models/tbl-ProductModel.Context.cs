//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2a.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductDbEntities : DbContext
    {
        public ProductDbEntities()
            : base("name=ProductDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Product> tbl_Product { get; set; }
    
        public virtual int sp_Delete(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete", productIdParameter);
        }
    
        public virtual int sp_Insert(Nullable<int> productId, string pname, string size, Nullable<decimal> price, Nullable<System.DateTime> mfgDate, string category)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var mfgDateParameter = mfgDate.HasValue ?
                new ObjectParameter("MfgDate", mfgDate) :
                new ObjectParameter("MfgDate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Insert", productIdParameter, pnameParameter, sizeParameter, priceParameter, mfgDateParameter, categoryParameter);
        }
    
        public virtual int sp_Update(Nullable<int> productId, string pname, string size, Nullable<decimal> price, Nullable<System.DateTime> mfgDate, string category)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var mfgDateParameter = mfgDate.HasValue ?
                new ObjectParameter("MfgDate", mfgDate) :
                new ObjectParameter("MfgDate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update", productIdParameter, pnameParameter, sizeParameter, priceParameter, mfgDateParameter, categoryParameter);
        }
    
        public virtual ObjectResult<tbl_Product> SearchFieldCriteria(string pname, string size, Nullable<decimal> price, Nullable<System.DateTime> mfgDate, string category)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var mfgDateParameter = mfgDate.HasValue ?
                new ObjectParameter("MfgDate", mfgDate) :
                new ObjectParameter("MfgDate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Product>("SearchFieldCriteria", pnameParameter, sizeParameter, priceParameter, mfgDateParameter, categoryParameter);
        }
    
        public virtual ObjectResult<tbl_Product> SearchFieldCriteria(string pname, string size, Nullable<decimal> price, Nullable<System.DateTime> mfgDate, string category, MergeOption mergeOption)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var mfgDateParameter = mfgDate.HasValue ?
                new ObjectParameter("MfgDate", mfgDate) :
                new ObjectParameter("MfgDate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Product>("SearchFieldCriteria", mergeOption, pnameParameter, sizeParameter, priceParameter, mfgDateParameter, categoryParameter);
        }
    }
}
